#include <stdio.h>
#include <iostream>
#include <set>
#include <algorithm>
using namespace std;

void printSet(multiset<int> &s){
    for (multiset<int>::iterator it = s.begin();it!=s.end();it++){
        cout << *it << endl;

    }
    
}
bool isEqual(multiset<int> &s, int n){
    int i = 0;
    
    for (multiset<int>::iterator it = s.begin();i<n-1;){
        if(*it != *(++it)){

            return false;
        }
        i++;

    }
    return true;
}

multiset<int> operateSet(multiset<int> &s, int n){
    multiset<int> temp;
    int i= 1;
    for (multiset<int>::iterator it = s.begin();it!=s.end();it++){
        
        if (i < n)
        {
            temp.insert((*it) + 1);
        }else{
            temp.insert(*it);
        }
        i++;
        
    }
    return temp;
}

int main(){
    multiset<int> s;
    int count=0;
    int n;
    cin >> n;
    int tmp;
    for (int i = 0; i < n; i++)
    {
        /* code */
        cin >> tmp;
        s.insert(tmp);

    }
   //printSet(s);
    while (true)
    {
        if(isEqual(s, n)){
            break;
        }else
        {
            s = operateSet(s, n);
            count ++;
        }
        
    }
    cout << count << endl;
    

    

    return 0;
}
